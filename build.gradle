def BUILD_NUMBER = System.getenv("BUILD_NUMBER") ?: "0"
def MAVEN_REPO = System.getenv("MAVEN_REPO") ?: ""
def MAVEN_USERNAME = System.getenv("MAVEN_USERNAME") ?: ""
def MAVEN_PASSWORD = System.getenv("MAVEN_PASSWORD") ?: ""

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'maven'

version = "3.8." + BUILD_NUMBER
group = "net.blay09.mods"
archivesBaseName = "eirairc"

minecraft {
    version = "1.8-11.14.1.1398"
    runDir = "eclipse"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20150305"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}

repositories {
    maven {
        name = "dynmap"
        url = "http://repo.mikeprimm.com/"
    }
}

configurations {
    deployerJars
}

dependencies {
    compile 'org.jetbrains:annotations:13.0'
    compile 'us.dynmap:DynmapCoreAPI:2.1'
    compile files('lib/TabbyChat-2.0.0-beta-api.jar')
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"
}

jar {
    from sourceSets.api.output
    appendix "mc" + minecraft.version
}

task jarAPI(type: Jar) {
    from sourceSets.api.output
    
    classifier "api"
    appendix "mc" + minecraft.version
}

task jarDev(type: Jar) {
    from sourceSets.main.output
    from sourceSets.api.output

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    classifier "dev"
    appendix "mc" + minecraft.version
}

artifacts {
    archives jarAPI
    archives jarDev
}

/*uploadArchives {
    dependsOn 'reobf'
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            
            repository(url: MAVEN_REPO) {
                authentication(userName: MAVEN_USERNAME, password: MAVEN_PASSWORD)
            }
            
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
            }
        }
    }
}*/